//import "reflect-metadata";
import {createConnection, getConnection} from "typeorm";
//import "../../scr/database"; 
import { User } from '../../src/entity/User';
import { UsersService }  from '../../src/services/UsersService';


import bcrypt  from 'bcryptjs';
    
   beforeAll(async () => {

      await createConnection();
   });

   it('should return email user', async () => {
       
    

    const userService = new UsersService(); 
    const usuario = await userService.create(name,email,password);
    //console.log("Saved a new user with id: ", usuario);
     
    
            
        

     expect(await bcrypt.compare('123123',usuario.password_hash)).toBe(true); 
     expect(usuario.email).toBe('diego@rocketseat.com.br'); 

   });


   afterAll(async () => {
      const defaultConnection = getConnection('default');
      await defaultConnection.close();  
     
   });
//     NÃ£o pode comparar porque cada vez um hash vai ter um valor diferente
//     const hash = await bcrypt.hash("123123", 8); 
//     console.log(hash);




});
